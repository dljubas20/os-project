@page "/encrypt-file"
@inject NavigationManager NavigationManager

<h3>Encrypt a File</h3>

<EditForm
    Model="@Model"
    OnValidSubmit="@OnValidSubmit"
    style="
        display: flex;
        flex-direction: column;
        align-items: center;
    "
>
    <DataAnnotationsValidator />
    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
        <ButtonTemplate Context="buttonContext">
            <MudButton HtmlTag="label"
                    Variant="Variant.Filled"
                    Color="Color.Primary"
                    StartIcon="@Icons.Material.Filled.CloudUpload"
                    for="@buttonContext">
                Upload Files
            </MudButton>
            <ValidationMessage For="() => Model.Files" />
        </ButtonTemplate>
    </MudFileUpload>

    @if (Model.Files != null)
    {
        <MudText Typo="@Typo.h6">@Model.Files.Count() File@(Model.Files.Count() == 1 ? "" : "s"):</MudText>
        <MudList>
            @foreach (var file in Model.Files)
            {
                <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                    @file.Name <code>@file.Size bytes</code>
                </MudListItem>
            }
        </MudList>
    }
        
    <MudTextField
        @bind-Value="@Model.Key"
        For="@(() => Model.Key)"
        Label="Key"
        Variant="Variant.Outlined"
        Required
        FullWidth
        Margin="Margin.Normal"
    />

    <MudButton
        Variant="Variant.Filled"
        ButtonType="ButtonType.Submit"
        Color="Color.Primary"
        Style="width: fit-content; margin: 2vh;"
    >
        Submit
    </MudButton>
</EditForm>

@code {
    public class FileEncryptInput
    {
        [Required]
        public IList<IBrowserFile>? Files { get; set; }
        [Required]
        public string? Key { get; set; }
    }
    public FileEncryptInput Model { get; set; } = new FileEncryptInput();
    private void UploadFiles(IBrowserFile file)
    {
        if (Model.Files == null) {
            Model.Files = new List<IBrowserFile>();
        }
        Model.Files.Add(file);
        //TODO upload the files to the server
    }
    private void OnValidSubmit(EditContext context)
    {
        StateHasChanged();
        NavigationManager.NavigateTo("/");
    }
}
